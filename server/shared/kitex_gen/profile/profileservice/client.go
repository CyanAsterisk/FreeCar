// Code generated by Kitex v0.4.4. DO NOT EDIT.

package profileservice

import (
	"context"
	profile "github.com/CyanAsterisk/FreeCar/server/shared/kitex_gen/profile"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	GetProfile(ctx context.Context, req *profile.GetProfileRequest, callOptions ...callopt.Option) (r *profile.GetProfileResponse, err error)
	SubmitProfile(ctx context.Context, req *profile.SubmitProfileRequest, callOptions ...callopt.Option) (r *profile.SubmitProfileResponse, err error)
	ClearProfile(ctx context.Context, req *profile.ClearProfileRequest, callOptions ...callopt.Option) (r *profile.ClearProfileResponse, err error)
	GetAllProfile(ctx context.Context, req *profile.GetAllProfileRequest, callOptions ...callopt.Option) (r *profile.GetAllProfileResponse, err error)
	GetSomeProfile(ctx context.Context, req *profile.GetSomeProfileRequest, callOptions ...callopt.Option) (r *profile.GetSomeProfileResponse, err error)
	GetPendingProfile(ctx context.Context, req *profile.GetPendingProfileRequest, callOptions ...callopt.Option) (r *profile.GetPendingProfileResponse, err error)
	CheckProfile(ctx context.Context, req *profile.CheckProfileRequest, callOptions ...callopt.Option) (r *profile.CheckProfileResponse, err error)
	DeleteProfile(ctx context.Context, req *profile.DeleteProfileRequest, callOptions ...callopt.Option) (r *profile.DeleteProfileResponse, err error)
	GetProfilePhoto(ctx context.Context, req *profile.GetProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.GetProfilePhotoResponse, err error)
	CreateProfilePhoto(ctx context.Context, req *profile.CreateProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.CreateProfilePhotoResponse, err error)
	CompleteProfilePhoto(ctx context.Context, req *profile.CompleteProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.CompleteProfilePhotoResponse, err error)
	ClearProfilePhoto(ctx context.Context, req *profile.ClearProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.ClearProfilePhotoResponse, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kProfileServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kProfileServiceClient struct {
	*kClient
}

func (p *kProfileServiceClient) GetProfile(ctx context.Context, req *profile.GetProfileRequest, callOptions ...callopt.Option) (r *profile.GetProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetProfile(ctx, req)
}

func (p *kProfileServiceClient) SubmitProfile(ctx context.Context, req *profile.SubmitProfileRequest, callOptions ...callopt.Option) (r *profile.SubmitProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SubmitProfile(ctx, req)
}

func (p *kProfileServiceClient) ClearProfile(ctx context.Context, req *profile.ClearProfileRequest, callOptions ...callopt.Option) (r *profile.ClearProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ClearProfile(ctx, req)
}

func (p *kProfileServiceClient) GetAllProfile(ctx context.Context, req *profile.GetAllProfileRequest, callOptions ...callopt.Option) (r *profile.GetAllProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetAllProfile(ctx, req)
}

func (p *kProfileServiceClient) GetSomeProfile(ctx context.Context, req *profile.GetSomeProfileRequest, callOptions ...callopt.Option) (r *profile.GetSomeProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSomeProfile(ctx, req)
}

func (p *kProfileServiceClient) GetPendingProfile(ctx context.Context, req *profile.GetPendingProfileRequest, callOptions ...callopt.Option) (r *profile.GetPendingProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetPendingProfile(ctx, req)
}

func (p *kProfileServiceClient) CheckProfile(ctx context.Context, req *profile.CheckProfileRequest, callOptions ...callopt.Option) (r *profile.CheckProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CheckProfile(ctx, req)
}

func (p *kProfileServiceClient) DeleteProfile(ctx context.Context, req *profile.DeleteProfileRequest, callOptions ...callopt.Option) (r *profile.DeleteProfileResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteProfile(ctx, req)
}

func (p *kProfileServiceClient) GetProfilePhoto(ctx context.Context, req *profile.GetProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.GetProfilePhotoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetProfilePhoto(ctx, req)
}

func (p *kProfileServiceClient) CreateProfilePhoto(ctx context.Context, req *profile.CreateProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.CreateProfilePhotoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateProfilePhoto(ctx, req)
}

func (p *kProfileServiceClient) CompleteProfilePhoto(ctx context.Context, req *profile.CompleteProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.CompleteProfilePhotoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CompleteProfilePhoto(ctx, req)
}

func (p *kProfileServiceClient) ClearProfilePhoto(ctx context.Context, req *profile.ClearProfilePhotoRequest, callOptions ...callopt.Option) (r *profile.ClearProfilePhotoResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ClearProfilePhoto(ctx, req)
}
